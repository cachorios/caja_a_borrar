<script type="text/javascript">


$('#load_indicador')
        .ajaxStart(function () {
            //$('body').append('"<div class="ajax_block"></div>');
            $(this).show();
        })
        .ajaxStop(function () {
            $(this).hide();
            $.unblockUI();
        })
;

/**
 * @var dataBarra
 * variable para asignar el balor de data (coleccion de elementos)
 * que tiene el boton agregar (hidden)
 * ya que hay eventos al cual no se le puede pasar, y es nevesario acceder a este.
 */
var dataBarra;
var totalComprobante;
var totalPago;

$(document).ready(function (e) {
    var $txtcodigoBarra = $("#txtcodigobarra");
    $txtcodigoBarra.focus();
    totalComprobante = 0;
    /**
     * Evento para cambio de codigo de barra
     */
    $txtcodigoBarra.change(function (e) {
        var $msgBarra = $("#msgBarra");
        $barra = $(this);
        dataBarra = "";

        $.blockUI({ message: null });

        cb = $barra.val().replace(/^\s*|\s*$/g, "");

        $msgBarra.text("");
        $("#masDetalleTemp").html("");

        if (cb.length <= 3) {
            $barra.val('');
            $msgBarra.text("Codigo invalido"); //.show();
            setTimeout("$barra.focus()", 100);
            $.unblockUI();
        } else {

            //Verificar que no este ya agregado en la tabla de comprobantes

            if (existeComprobante(cb)) {
                $barra.val('');
                $msgBarra.text("El codigo de barra ya esta ingresado."); //.show();
                setTimeout("$barra.focus()", 100);
                $.unblockUI();
            } else {

                /***
                 * Peticion ajax
                 */
                $.ajax({
                    url: "{{ path('registro_barra') }}",
                    data: { cb: cb  },
                    dataType: "json",
                    success: actDesdeCB,
                    error: function (jqXHR, status, error) {
                        $.unblockUI();
                        alert('Disculpe, existió un problema: ' + error);
                    }
                });
            }
        }


    });

    /**
     * Si se proceso correctamente la peticion ajax
     * del codigo de barra
     * @param data
     */
    actDesdeCB = function (data) {
        $barra.val('');
        $barra.focus();
        if (data.ok == 1) {
            /**
             * guardo data en databarra para acceder desde otros eventos
             */
            dataBarra = data;
            $btn = $('[data-coleccion-add-btn-det]', '#caja_sistemacajabundle_registrotype_detalle');

            /**
             * Disparo el boton add para agregar el registro nuevo con los
             * datos del codigo de barra.
             */
            $btn.trigger("click");
        } else {
            $("#msgBarra").text(data.msg);
        }
        $.unblockUI();
    };


    /**
     * existeComprobante
     *
     * Comprueba si el codigo de barra ingresado ya existe.
     *
     * @param $cdbarra
     * @return {Boolean}
     */
    existeComprobante = function ($cdbarra) {
        var existe = false;
        $('input.cbarra', 'div#caja_sistemacajabundle_registrotype_detalle').each(function () {
            if ($cdbarra == this.value) {
                existe = true;
            }
        });

        return existe;

    }


    /**
     * Boton oculto Agregar detalle
     * para agregar item en el comprobante
     * disparado por un trigger en el evento
     * change del codigo de barra.
     */

    $('body').on('click', '[data-coleccion-add-btn-det]', function (e) {
        var $btn = $(e.target);
        if (!$btn.hasClass('btn')) {
            $btn = $btn.closest('.btn');
        }
        $btn.coleccion({
            opcion: 'add',
            addpostfunc: postAddDetalle
        });
        e.preventDefault();
    });

    /**
     * Evento que se ejecuta al agregar un nuevo elemento al detalle
     * lo utilizo para actualizar los registros con los datos recibido
     * del server
     * @param data
     */
    postAddDetalle = function (row, index) {
        $('#caja_sistemacajabundle_registrotype_detalle_' + index + '_codigo_barra').val(cb);
        $('#caja_sistemacajabundle_registrotype_detalle_' + index + '_comprobante').val(dataBarra.comprobante);
        $('#caja_sistemacajabundle_registrotype_detalle_' + index + '_referencia').val(dataBarra.referencia);
        $('#caja_sistemacajabundle_registrotype_detalle_' + index + '_seccion').val(dataBarra.seccion);
        $('#caja_sistemacajabundle_registrotype_detalle_' + index + '_fecha').val(dataBarra.vencimiento);
        $('#caja_sistemacajabundle_registrotype_detalle_' + index + '_importe').val(dataBarra.importe);

        $('#caja_sistemacajabundle_registrotype_detalle_' + index + '_comprobante').attr('readonly', 'readonly');
        $('#caja_sistemacajabundle_registrotype_detalle_' + index + '_referencia').attr('readonly', 'readonly');
        $('#caja_sistemacajabundle_registrotype_detalle_' + index + '_fecha').attr('readonly', 'readonly');
        $('#caja_sistemacajabundle_registrotype_detalle_' + index + '_importe').attr('readonly', 'readonly');

        totalizaComprobante();

        $('a.info-barra', row).attr('data-content', dataBarra.detalle);
        $("#masDetalleTemp").html(dataBarra.detalle);
        $('a.info-barra', row).popover({trigger: 'hover', html: true})
    };

    /**
     * Quitar - accion Click
     * Cuando el usuario presiona en el boton quitar
     * del detalle de comprobantes.
     */
    $('body').on('click', '[data-coleccion-remove-btn-det]', function (e) {
        var $btn = $(e.target);
        if (!$btn.hasClass('btn')) {
            $btn = $btn.closest('.btn');
        }

        $btn.coleccion({
            opcion: 'remove',
            rempostfunc: postBorrarDetalle
        });
        e.preventDefault();
    });

    /**
     * Evento que ocurre despues de borrar un elemento en Collection
     */
    postBorrarDetalle = function () {
        var $txtcodigoBarra = $("#txtcodigobarra");
        $txtcodigoBarra.val('');
        $txtcodigoBarra.show(50).focus();
        totalizaComprobante();

    };

    /**
     * totalizaComprobante
     * Totaliza el detalle de comprobante, se
     * ejecuta este meodo cuando agrega o
     * cuando quita un elemento
     */

    totalizaComprobante = function () {
        var total = 0;
        $('input.importe', 'div#caja_sistemacajabundle_registrotype_detalle').each(function () {
            total = total + parseFloat(this.value);
        });
        totalComprobante = Math.round(total * 100) / 100;
        $("#lote_detalle_total").text(formato_numero(total, 2));
        if (totalComprobante > 0) {
            $("#PagarComprobantes").show();
        } else {
            $("#PagarComprobantes").hide();
        }
        $.unblockUI();
    };

    /*---------------------------- PAGO ------------------------------------------------------------ */
    //boton que abre la ventana modal de pago
    $("#PagarComprobantes").click(function () {
        var $pagmod,
                btnAdd,
                data;

        totalPago = 0;

        $.msgBox({
            title: "Confirmación",
            content: "Realiza el pago de estos comprobantes?",
            type: "confirm",
            buttons: [
                { value: "Si" },
                { value: "Cancelar"}
            ],
            success: function (result) {
                if (result == "Si") {
                    $("#apago_importe").text(formato_numero(totalComprobante, 2));
                    /* quitar las lineas actuales para que iniciar */
                    $pagmod = $("#PagoModal");
                    $("table tbody", $pagmod).remove();
                    $("table", $pagmod).append("<tbody></tbody>");

                    btnAdd = $("[data-coleccion-add-btn]", $pagmod);
                    btnAdd.trigger('click');
                    $pagmod.modal();
                }
            }
        });


    });

    $('#PagoModal').on('click', '[data-coleccion-add-btn]', function (e) {
        var $btn = $(e.target);
        if (!$btn.hasClass('btn')) {
            $btn = $btn.closest('.btn');
        }
        $btn.coleccion({
            opcion: 'add',
            addpostfunc: postAddPago
        });
        e.preventDefault();
        return false;
    });

    postAddPago = function (row, i) {
        /**El pago por defecto, como es fijo en la primer carga de la pagina se pasa como parametro
         * al renderview, asi no lo tenemos que esta pidiendo
         */

        $("#caja_sistemacajabundle_registrotype_pagos_" + i + "_tipo_pago").val(tipoPagoDefault);
        $("#caja_sistemacajabundle_registrotype_pagos_" + i + "_importe").val(formato_numero(totalComprobante - totalPago, 2, "."));
        totalizaPagos();
        $("#caja_sistemacajabundle_registrotype_pagos_" + i + "_tipo_pago").focus();

    };

    /**
     * Quitar - accion Click
     * Cuando el usuario presiona en el boton quitar
     * del pago
     */
    $('#PagoModal').on('click', '[data-coleccion-remove-btn]', function (e) {
        var $btn = $(e.target);
        if (!$btn.hasClass('btn')) {
            $btn = $btn.closest('.btn');
        }

        $btn.coleccion({
            opcion: 'remove',
            rempostfunc: postBorrarPago
        });
        e.preventDefault();
        return false;
    });

    postBorrarPago = function () {
        totalizaPagos();
    };


    /**
     * Evento que se dispara cuando cambio el monto a pagar
     */
    $("#PagoModal").on("change", 'input', function () {
        var importe = Math.round(parseFloat($(this).val()) * 100) / 100;

        $(this).val(formato_numero($(this).val(), 2, "."));
        totalizaPagos();
    });


    totalizaPagos = function () {
        var total = 0, n = 0;

        $('#PagoModal input').each(function () {

            if (n == 1) {
                //$("button.remove", $(this).closest('tr')).hide();
                $("button.remove", $(this).closest('tr')).trigger("click");
            } else {
                total = Math.round((total + parseFloat(this.value)) * 100) / 100;
                if (total >= totalComprobante) {
                    $(this).val(formato_numero(totalComprobante - total + parseFloat(this.value), 2, "."));
                    total = totalComprobante;
                    n = 1;
                }
            }
        });

        totalPago = total;

        $("#totalpago").text(formato_numero(totalPago, 2));
        $("#totalSaldo").text(formato_numero(totalComprobante - totalPago, 2));

        if (Math.round((totalComprobante - totalPago) * 100) / 100 > 0) {
            $("[data-coleccion-add-btn]", "#PagoModal").trigger('click');
        }

    };

    /**
     * Evento click del boton REGISTRAR PAGO
     */
    $("#pago_save").click(function (e) {

        $.msgBox({
            title: "Registración de Pago",
            content: "Si esta todo correcto,<br> proceda a almacenar el pago e imprime ticket!",
            type: "confirm",
            buttons: [
                { value: "Si" },
                { value: "Cancelar"}
            ],
            success: function (result) {
                if (result == "Si") {

                    //guardarRegistro sera llamado si el estado esta ok!
                    varificarEstadoSerial("guardarRegistro");
                    return false;
                }
                if (result == "Cancelar") {

                }
            }
        });

        e.preventDefault();
        return false;

    });

    /**
     * Guarda el registro y manda a imprmir
     */
    guardarRegistro = function () {
        miForm = $("form", "#form_CodigoBarra"); //.submit();

        $.ajax({
            type: 'POST',
            url: $(miForm).attr('action'),
            data: $(miForm).serialize(),
            dataType: "json",
            success: function (data) {
                //$('#result').html(data);
                if (data.ok == 1) {
                    imprimirSerial(data.ticket);
                    //redirigir
                    window.location = "{{ path('registro') }}";
                }
                else if (data.ok != 1) {
                    alert(data.error);
                }
            }
        })
    }


    /**
     * Manda a la impresora fiscal.
     * @param data
     */
    varificarEstadoSerial = function (sFuncion) {
        var pser = document.SerialLar;
        try {

            pser.ifEstadoRun(sFuncion);
        } catch (e) {
            alert(e);
        }
    }

    /**
     * Manda a la impresora fiscal.
     * @param data
     */
    imprimirSerial = function (data) {
        var pser = document.SerialLar;
        try {
            if (impresoraOK == 1) {
                pser.escribir(data);
            }

        } catch (e) {
            alert(e);
        }
    }

    /**
     * Estado de la impresora fiscal.
     */
    estadoSerial = function () {
        var pser = document.SerialLar;
        try {
            impresoraOK = 0;
            esperandoEstado = 1;
            pser.getEstado();
        } catch (e) {
            alert(e);
        }
    }


    $("#estado").click(function () {
        estadoSerial();
    });


}); //fin document ready


</script>