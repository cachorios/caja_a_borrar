<?php

namespace Caja\SistemaCajaBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * AperturaRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class AperturaRepository extends EntityRepository
{
    public function getAperturas($usuario){
        $em = $this->getEntityManager();

        $a = $this->createQueryBuilder("a")
            ->join("a.caja","c")
            ->where('c.cajero = :cajero')
            ->setParameter("cajero", $usuario->getId())
            ->orderBy("a.fecha",'asc');

        return $a;
    }

    public function getPagosByTipoPago($apertura_id)
    {
        $em = $this->getEntityManager();

        $q = $em->createQuery("
              SELECT
                  t.id,t.descripcion, sum(p.importe)
              FROM
                  SistemaCajaBundle:LotePago p JOIN p.tipo_pago t JOIN p.lote l
              WHERE
                  l.apertura = :apertura_id
              GROUP BY
                  t.id, t.descripcion
              ORDER BY
                  t.id ")
            ->setParameter("apertura_id", $apertura_id)
        ;

        $res = $q->getResult();

        return $res;

    }

    /**
     * Obtiene el importe total de pagos de la apertura
     * @param $apertura_id
     * @return float
     */
    public function getImportePagos($apertura_id)
    {
        $em = $this->getEntityManager();

        $q = $em->createQuery("
              SELECT sum(p.importe)
              FROM
                  SistemaCajaBundle:LotePago p JOIN p.lote l
              WHERE
                  l.apertura = :apertura_id
              ")
            ->setParameter("apertura_id", $apertura_id)
        ;

        $res = $q->getSingleResult();

        if ($res[1] > 0) {
            return $res[1];
        } else {
            return 0;
        }

    }

    /**
     * Obtiene el importe total de pagos anulado de la apertura
     * @param $apertura_id
     * @return float
     */
    public function getImportePagosAnulado($apertura_id)
    {
        $em = $this->getEntityManager();

        $q = $em->createQuery("
              SELECT sum(p.importe)
              FROM
                  SistemaCajaBundle:LotePago p JOIN p.lote l
              WHERE
                  l.apertura = :apertura_id
                  AND p.importe < 0
              ")
            ->setParameter("apertura_id", $apertura_id)
        ;

        $res = $q->getSingleResult();

        if ($res[1] < 0) {
            return - $res[1];
        } else {
            return 0;
        }

    }





}
